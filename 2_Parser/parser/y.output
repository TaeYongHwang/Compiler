Terminals unused in grammar

   THEN
   END
   REPEAT
   UNTIL
   READ
   WRITE
   ERROR


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 $@1: %empty

    7 var_declaration: type_specifier id_fill $@1 SEMI

    8 $@2: %empty

    9 var_declaration: type_specifier id_fill $@2 LBRACE array_num_fill RBRACE SEMI

   10 array_num_fill: NUM

   11 type_specifier: INT
   12               | VOID

   13 id_fill: ID

   14 $@3: %empty

   15 fun_declaration: type_specifier id_fill $@3 LPAREN params RPAREN compound_stmt

   16 params: param_list
   17       | VOID

   18 param_list: param_list COMMA param
   19           | param

   20 param: type_specifier id_fill

   21 $@4: %empty

   22 param: type_specifier id_fill $@4 LBRACE RBRACE

   23 compound_stmt: LCURLY local_declarations statement_list RCURLY

   24 local_declarations: local_declarations var_declaration
   25                   | %empty

   26 statement_list: statement_list statement
   27               | %empty

   28 statement: expression_stmt
   29          | compound_stmt
   30          | selection_stmt
   31          | iteration_stmt
   32          | return_stmt

   33 expression_stmt: expression SEMI
   34                | SEMI

   35 selection_stmt: IF LPAREN expression RPAREN statement
   36               | IF LPAREN expression RPAREN statement ELSE statement

   37 iteration_stmt: WHILE LPAREN expression RPAREN statement

   38 return_stmt: RETURN SEMI
   39            | RETURN expression SEMI

   40 expression: var ASSIGN expression
   41           | simple_expression

   42 var: id_fill

   43 $@5: %empty

   44 var: id_fill $@5 LBRACE expression RBRACE

   45 simple_expression: additive_expression relop additive_expression
   46                  | additive_expression

   47 relop: LE
   48      | LT
   49      | GT
   50      | GE
   51      | EQ
   52      | NE

   53 additive_expression: additive_expression addop term
   54                    | term

   55 addop: PLUS
   56      | MINUS

   57 term: term mulop factor
   58     | factor

   59 mulop: TIMES
   60      | OVER

   61 factor: LPAREN expression RPAREN
   62       | var
   63       | call
   64       | NUM

   65 $@6: %empty

   66 call: id_fill $@6 LPAREN args RPAREN

   67 args: arg_list
   68     | %empty

   69 arg_list: arg_list COMMA expression
   70         | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 35 36
ELSE (259) 36
WHILE (260) 37
RETURN (261) 38 39
INT (262) 11
VOID (263) 12 17
THEN (264)
END (265)
REPEAT (266)
UNTIL (267)
READ (268)
WRITE (269)
ASSIGN (270) 40
EQ (271) 51
NE (272) 52
LT (273) 48
LE (274) 47
GT (275) 49
GE (276) 50
TIMES (277) 59
OVER (278) 60
PLUS (279) 55
MINUS (280) 56
LPAREN (281) 15 35 36 37 61 66
RPAREN (282) 15 35 36 37 61 66
LBRACE (283) 9 22 44
RBRACE (284) 9 22 44
LCURLY (285) 23
RCURLY (286) 23
SEMI (287) 7 9 33 34 38 39
COMMA (288) 18 69
NUM (289) 10 64
ID (290) 13
ERROR (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
declaration_list (39)
    on left: 2 3, on right: 1 2
declaration (40)
    on left: 4 5, on right: 2 3
var_declaration (41)
    on left: 7 9, on right: 4 24
$@1 (42)
    on left: 6, on right: 7
$@2 (43)
    on left: 8, on right: 9
array_num_fill (44)
    on left: 10, on right: 9
type_specifier (45)
    on left: 11 12, on right: 7 9 15 20 22
id_fill (46)
    on left: 13, on right: 7 9 15 20 22 42 44 66
fun_declaration (47)
    on left: 15, on right: 5
$@3 (48)
    on left: 14, on right: 15
params (49)
    on left: 16 17, on right: 15
param_list (50)
    on left: 18 19, on right: 16 18
param (51)
    on left: 20 22, on right: 18 19
$@4 (52)
    on left: 21, on right: 22
compound_stmt (53)
    on left: 23, on right: 15 29
local_declarations (54)
    on left: 24 25, on right: 23 24
statement_list (55)
    on left: 26 27, on right: 23 26
statement (56)
    on left: 28 29 30 31 32, on right: 26 35 36 37
expression_stmt (57)
    on left: 33 34, on right: 28
selection_stmt (58)
    on left: 35 36, on right: 30
iteration_stmt (59)
    on left: 37, on right: 31
return_stmt (60)
    on left: 38 39, on right: 32
expression (61)
    on left: 40 41, on right: 33 35 36 37 39 40 44 61 69 70
var (62)
    on left: 42 44, on right: 40 62
$@5 (63)
    on left: 43, on right: 44
simple_expression (64)
    on left: 45 46, on right: 41
relop (65)
    on left: 47 48 49 50 51 52, on right: 45
additive_expression (66)
    on left: 53 54, on right: 45 46 53
addop (67)
    on left: 55 56, on right: 53
term (68)
    on left: 57 58, on right: 53 54 57
mulop (69)
    on left: 59 60, on right: 57
factor (70)
    on left: 61 62 63 64, on right: 57 58
call (71)
    on left: 66, on right: 63
$@6 (72)
    on left: 65, on right: 66
args (73)
    on left: 67 68, on right: 66
arg_list (74)
    on left: 69 70, on right: 67 69


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

   11 type_specifier: INT .

    $default  reduce using rule 11 (type_specifier)


State 2

   12 type_specifier: VOID .

    $default  reduce using rule 12 (type_specifier)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 7

    7 var_declaration: type_specifier . id_fill $@1 SEMI
    9                | type_specifier . id_fill $@2 LBRACE array_num_fill RBRACE SEMI
   15 fun_declaration: type_specifier . id_fill $@3 LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 11

    id_fill  go to state 12


State 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 11

   13 id_fill: ID .

    $default  reduce using rule 13 (id_fill)


State 12

    7 var_declaration: type_specifier id_fill . $@1 SEMI
    9                | type_specifier id_fill . $@2 LBRACE array_num_fill RBRACE SEMI
   15 fun_declaration: type_specifier id_fill . $@3 LPAREN params RPAREN compound_stmt

    LPAREN    reduce using rule 14 ($@3)
    LBRACE    reduce using rule 8 ($@2)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 13
    $@2  go to state 14
    $@3  go to state 15


State 13

    7 var_declaration: type_specifier id_fill $@1 . SEMI

    SEMI  shift, and go to state 16


State 14

    9 var_declaration: type_specifier id_fill $@2 . LBRACE array_num_fill RBRACE SEMI

    LBRACE  shift, and go to state 17


State 15

   15 fun_declaration: type_specifier id_fill $@3 . LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 18


State 16

    7 var_declaration: type_specifier id_fill $@1 SEMI .

    $default  reduce using rule 7 (var_declaration)


State 17

    9 var_declaration: type_specifier id_fill $@2 LBRACE . array_num_fill RBRACE SEMI

    NUM  shift, and go to state 19

    array_num_fill  go to state 20


State 18

   15 fun_declaration: type_specifier id_fill $@3 LPAREN . params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 21

    type_specifier  go to state 22
    params          go to state 23
    param_list      go to state 24
    param           go to state 25


State 19

   10 array_num_fill: NUM .

    $default  reduce using rule 10 (array_num_fill)


State 20

    9 var_declaration: type_specifier id_fill $@2 LBRACE array_num_fill . RBRACE SEMI

    RBRACE  shift, and go to state 26


State 21

   12 type_specifier: VOID .
   17 params: VOID .

    RPAREN    reduce using rule 17 (params)
    $default  reduce using rule 12 (type_specifier)


State 22

   20 param: type_specifier . id_fill
   22      | type_specifier . id_fill $@4 LBRACE RBRACE

    ID  shift, and go to state 11

    id_fill  go to state 27


State 23

   15 fun_declaration: type_specifier id_fill $@3 LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 28


State 24

   16 params: param_list .
   18 param_list: param_list . COMMA param

    COMMA  shift, and go to state 29

    $default  reduce using rule 16 (params)


State 25

   19 param_list: param .

    $default  reduce using rule 19 (param_list)


State 26

    9 var_declaration: type_specifier id_fill $@2 LBRACE array_num_fill RBRACE . SEMI

    SEMI  shift, and go to state 30


State 27

   20 param: type_specifier id_fill .
   22      | type_specifier id_fill . $@4 LBRACE RBRACE

    LBRACE    reduce using rule 21 ($@4)
    $default  reduce using rule 20 (param)

    $@4  go to state 31


State 28

   15 fun_declaration: type_specifier id_fill $@3 LPAREN params RPAREN . compound_stmt

    LCURLY  shift, and go to state 32

    compound_stmt  go to state 33


State 29

   18 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 22
    param           go to state 34


State 30

    9 var_declaration: type_specifier id_fill $@2 LBRACE array_num_fill RBRACE SEMI .

    $default  reduce using rule 9 (var_declaration)


State 31

   22 param: type_specifier id_fill $@4 . LBRACE RBRACE

    LBRACE  shift, and go to state 35


State 32

   23 compound_stmt: LCURLY . local_declarations statement_list RCURLY

    $default  reduce using rule 25 (local_declarations)

    local_declarations  go to state 36


State 33

   15 fun_declaration: type_specifier id_fill $@3 LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 15 (fun_declaration)


State 34

   18 param_list: param_list COMMA param .

    $default  reduce using rule 18 (param_list)


State 35

   22 param: type_specifier id_fill $@4 LBRACE . RBRACE

    RBRACE  shift, and go to state 37


State 36

   23 compound_stmt: LCURLY local_declarations . statement_list RCURLY
   24 local_declarations: local_declarations . var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 27 (statement_list)

    var_declaration  go to state 38
    type_specifier   go to state 39
    statement_list   go to state 40


State 37

   22 param: type_specifier id_fill $@4 LBRACE RBRACE .

    $default  reduce using rule 22 (param)


State 38

   24 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 24 (local_declarations)


State 39

    7 var_declaration: type_specifier . id_fill $@1 SEMI
    9                | type_specifier . id_fill $@2 LBRACE array_num_fill RBRACE SEMI

    ID  shift, and go to state 11

    id_fill  go to state 41


State 40

   23 compound_stmt: LCURLY local_declarations statement_list . RCURLY
   26 statement_list: statement_list . statement

    IF      shift, and go to state 42
    WHILE   shift, and go to state 43
    RETURN  shift, and go to state 44
    LPAREN  shift, and go to state 45
    LCURLY  shift, and go to state 32
    RCURLY  shift, and go to state 46
    SEMI    shift, and go to state 47
    NUM     shift, and go to state 48
    ID      shift, and go to state 11

    id_fill              go to state 49
    compound_stmt        go to state 50
    statement            go to state 51
    expression_stmt      go to state 52
    selection_stmt       go to state 53
    iteration_stmt       go to state 54
    return_stmt          go to state 55
    expression           go to state 56
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 41

    7 var_declaration: type_specifier id_fill . $@1 SEMI
    9                | type_specifier id_fill . $@2 LBRACE array_num_fill RBRACE SEMI

    LBRACE    reduce using rule 8 ($@2)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 13
    $@2  go to state 14


State 42

   35 selection_stmt: IF . LPAREN expression RPAREN statement
   36               | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 63


State 43

   37 iteration_stmt: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 64


State 44

   38 return_stmt: RETURN . SEMI
   39            | RETURN . expression SEMI

    LPAREN  shift, and go to state 45
    SEMI    shift, and go to state 65
    NUM     shift, and go to state 48
    ID      shift, and go to state 11

    id_fill              go to state 49
    expression           go to state 66
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 45

   61 factor: LPAREN . expression RPAREN

    LPAREN  shift, and go to state 45
    NUM     shift, and go to state 48
    ID      shift, and go to state 11

    id_fill              go to state 49
    expression           go to state 67
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 46

   23 compound_stmt: LCURLY local_declarations statement_list RCURLY .

    $default  reduce using rule 23 (compound_stmt)


State 47

   34 expression_stmt: SEMI .

    $default  reduce using rule 34 (expression_stmt)


State 48

   64 factor: NUM .

    $default  reduce using rule 64 (factor)


State 49

   42 var: id_fill .
   44    | id_fill . $@5 LBRACE expression RBRACE
   66 call: id_fill . $@6 LPAREN args RPAREN

    LPAREN    reduce using rule 65 ($@6)
    LBRACE    reduce using rule 43 ($@5)
    $default  reduce using rule 42 (var)

    $@5  go to state 68
    $@6  go to state 69


State 50

   29 statement: compound_stmt .

    $default  reduce using rule 29 (statement)


State 51

   26 statement_list: statement_list statement .

    $default  reduce using rule 26 (statement_list)


State 52

   28 statement: expression_stmt .

    $default  reduce using rule 28 (statement)


State 53

   30 statement: selection_stmt .

    $default  reduce using rule 30 (statement)


State 54

   31 statement: iteration_stmt .

    $default  reduce using rule 31 (statement)


State 55

   32 statement: return_stmt .

    $default  reduce using rule 32 (statement)


State 56

   33 expression_stmt: expression . SEMI

    SEMI  shift, and go to state 70


State 57

   40 expression: var . ASSIGN expression
   62 factor: var .

    ASSIGN  shift, and go to state 71

    $default  reduce using rule 62 (factor)


State 58

   41 expression: simple_expression .

    $default  reduce using rule 41 (expression)


State 59

   45 simple_expression: additive_expression . relop additive_expression
   46                  | additive_expression .
   53 additive_expression: additive_expression . addop term

    EQ     shift, and go to state 72
    NE     shift, and go to state 73
    LT     shift, and go to state 74
    LE     shift, and go to state 75
    GT     shift, and go to state 76
    GE     shift, and go to state 77
    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 46 (simple_expression)

    relop  go to state 80
    addop  go to state 81


State 60

   54 additive_expression: term .
   57 term: term . mulop factor

    TIMES  shift, and go to state 82
    OVER   shift, and go to state 83

    $default  reduce using rule 54 (additive_expression)

    mulop  go to state 84


State 61

   58 term: factor .

    $default  reduce using rule 58 (term)


State 62

   63 factor: call .

    $default  reduce using rule 63 (factor)


State 63

   35 selection_stmt: IF LPAREN . expression RPAREN statement
   36               | IF LPAREN . expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 45
    NUM     shift, and go to state 48
    ID      shift, and go to state 11

    id_fill              go to state 49
    expression           go to state 85
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 64

   37 iteration_stmt: WHILE LPAREN . expression RPAREN statement

    LPAREN  shift, and go to state 45
    NUM     shift, and go to state 48
    ID      shift, and go to state 11

    id_fill              go to state 49
    expression           go to state 86
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 65

   38 return_stmt: RETURN SEMI .

    $default  reduce using rule 38 (return_stmt)


State 66

   39 return_stmt: RETURN expression . SEMI

    SEMI  shift, and go to state 87


State 67

   61 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 88


State 68

   44 var: id_fill $@5 . LBRACE expression RBRACE

    LBRACE  shift, and go to state 89


State 69

   66 call: id_fill $@6 . LPAREN args RPAREN

    LPAREN  shift, and go to state 90


State 70

   33 expression_stmt: expression SEMI .

    $default  reduce using rule 33 (expression_stmt)


State 71

   40 expression: var ASSIGN . expression

    LPAREN  shift, and go to state 45
    NUM     shift, and go to state 48
    ID      shift, and go to state 11

    id_fill              go to state 49
    expression           go to state 91
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 72

   51 relop: EQ .

    $default  reduce using rule 51 (relop)


State 73

   52 relop: NE .

    $default  reduce using rule 52 (relop)


State 74

   48 relop: LT .

    $default  reduce using rule 48 (relop)


State 75

   47 relop: LE .

    $default  reduce using rule 47 (relop)


State 76

   49 relop: GT .

    $default  reduce using rule 49 (relop)


State 77

   50 relop: GE .

    $default  reduce using rule 50 (relop)


State 78

   55 addop: PLUS .

    $default  reduce using rule 55 (addop)


State 79

   56 addop: MINUS .

    $default  reduce using rule 56 (addop)


State 80

   45 simple_expression: additive_expression relop . additive_expression

    LPAREN  shift, and go to state 45
    NUM     shift, and go to state 48
    ID      shift, and go to state 11

    id_fill              go to state 49
    var                  go to state 92
    additive_expression  go to state 93
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 81

   53 additive_expression: additive_expression addop . term

    LPAREN  shift, and go to state 45
    NUM     shift, and go to state 48
    ID      shift, and go to state 11

    id_fill  go to state 49
    var      go to state 92
    term     go to state 94
    factor   go to state 61
    call     go to state 62


State 82

   59 mulop: TIMES .

    $default  reduce using rule 59 (mulop)


State 83

   60 mulop: OVER .

    $default  reduce using rule 60 (mulop)


State 84

   57 term: term mulop . factor

    LPAREN  shift, and go to state 45
    NUM     shift, and go to state 48
    ID      shift, and go to state 11

    id_fill  go to state 49
    var      go to state 92
    factor   go to state 95
    call     go to state 62


State 85

   35 selection_stmt: IF LPAREN expression . RPAREN statement
   36               | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 96


State 86

   37 iteration_stmt: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 97


State 87

   39 return_stmt: RETURN expression SEMI .

    $default  reduce using rule 39 (return_stmt)


State 88

   61 factor: LPAREN expression RPAREN .

    $default  reduce using rule 61 (factor)


State 89

   44 var: id_fill $@5 LBRACE . expression RBRACE

    LPAREN  shift, and go to state 45
    NUM     shift, and go to state 48
    ID      shift, and go to state 11

    id_fill              go to state 49
    expression           go to state 98
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 90

   66 call: id_fill $@6 LPAREN . args RPAREN

    LPAREN  shift, and go to state 45
    NUM     shift, and go to state 48
    ID      shift, and go to state 11

    $default  reduce using rule 68 (args)

    id_fill              go to state 49
    expression           go to state 99
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62
    args                 go to state 100
    arg_list             go to state 101


State 91

   40 expression: var ASSIGN expression .

    $default  reduce using rule 40 (expression)


State 92

   62 factor: var .

    $default  reduce using rule 62 (factor)


State 93

   45 simple_expression: additive_expression relop additive_expression .
   53 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 45 (simple_expression)

    addop  go to state 81


State 94

   53 additive_expression: additive_expression addop term .
   57 term: term . mulop factor

    TIMES  shift, and go to state 82
    OVER   shift, and go to state 83

    $default  reduce using rule 53 (additive_expression)

    mulop  go to state 84


State 95

   57 term: term mulop factor .

    $default  reduce using rule 57 (term)


State 96

   35 selection_stmt: IF LPAREN expression RPAREN . statement
   36               | IF LPAREN expression RPAREN . statement ELSE statement

    IF      shift, and go to state 42
    WHILE   shift, and go to state 43
    RETURN  shift, and go to state 44
    LPAREN  shift, and go to state 45
    LCURLY  shift, and go to state 32
    SEMI    shift, and go to state 47
    NUM     shift, and go to state 48
    ID      shift, and go to state 11

    id_fill              go to state 49
    compound_stmt        go to state 50
    statement            go to state 102
    expression_stmt      go to state 52
    selection_stmt       go to state 53
    iteration_stmt       go to state 54
    return_stmt          go to state 55
    expression           go to state 56
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 97

   37 iteration_stmt: WHILE LPAREN expression RPAREN . statement

    IF      shift, and go to state 42
    WHILE   shift, and go to state 43
    RETURN  shift, and go to state 44
    LPAREN  shift, and go to state 45
    LCURLY  shift, and go to state 32
    SEMI    shift, and go to state 47
    NUM     shift, and go to state 48
    ID      shift, and go to state 11

    id_fill              go to state 49
    compound_stmt        go to state 50
    statement            go to state 103
    expression_stmt      go to state 52
    selection_stmt       go to state 53
    iteration_stmt       go to state 54
    return_stmt          go to state 55
    expression           go to state 56
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 98

   44 var: id_fill $@5 LBRACE expression . RBRACE

    RBRACE  shift, and go to state 104


State 99

   70 arg_list: expression .

    $default  reduce using rule 70 (arg_list)


State 100

   66 call: id_fill $@6 LPAREN args . RPAREN

    RPAREN  shift, and go to state 105


State 101

   67 args: arg_list .
   69 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 106

    $default  reduce using rule 67 (args)


State 102

   35 selection_stmt: IF LPAREN expression RPAREN statement .
   36               | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 107

    $default  reduce using rule 35 (selection_stmt)


State 103

   37 iteration_stmt: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 37 (iteration_stmt)


State 104

   44 var: id_fill $@5 LBRACE expression RBRACE .

    $default  reduce using rule 44 (var)


State 105

   66 call: id_fill $@6 LPAREN args RPAREN .

    $default  reduce using rule 66 (call)


State 106

   69 arg_list: arg_list COMMA . expression

    LPAREN  shift, and go to state 45
    NUM     shift, and go to state 48
    ID      shift, and go to state 11

    id_fill              go to state 49
    expression           go to state 108
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 107

   36 selection_stmt: IF LPAREN expression RPAREN statement ELSE . statement

    IF      shift, and go to state 42
    WHILE   shift, and go to state 43
    RETURN  shift, and go to state 44
    LPAREN  shift, and go to state 45
    LCURLY  shift, and go to state 32
    SEMI    shift, and go to state 47
    NUM     shift, and go to state 48
    ID      shift, and go to state 11

    id_fill              go to state 49
    compound_stmt        go to state 50
    statement            go to state 109
    expression_stmt      go to state 52
    selection_stmt       go to state 53
    iteration_stmt       go to state 54
    return_stmt          go to state 55
    expression           go to state 56
    var                  go to state 57
    simple_expression    go to state 58
    additive_expression  go to state 59
    term                 go to state 60
    factor               go to state 61
    call                 go to state 62


State 108

   69 arg_list: arg_list COMMA expression .

    $default  reduce using rule 69 (arg_list)


State 109

   36 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 36 (selection_stmt)
